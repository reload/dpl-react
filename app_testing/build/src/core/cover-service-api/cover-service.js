"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useGetCoverCollection = exports.getGetCoverCollectionQueryKey = exports.getCoverCollection = void 0;
/**
 * Generated by orval v6.8.1 🍺
 * Do not edit manually.
 * DDF Cover Service
 * This service provides covers for library materials indexed by isbn, issn, faust, pid.
The service is provided by [Det Digitale Folkebibliotek](https://detdigitalefolkebibliotek.dk/section/i-brug-paa-biblioteket/cover-service)
### Authentication notes
Authentication is done via OAuth2 against auth.dbc.dk. To obtain a valid token follow the instructions here: [Open Platform](https://openplatform.dbc.dk/v3/). To use the "Authorize" option in this tool use your 'client_id' and 'client_secret' and fill in '@agency' (e.g. '@123456') for both username and password.
 * OpenAPI spec version: 2.0
 */
const react_query_1 = require("react-query");
const fetcher_1 = require("./mutator/fetcher");
/**
 * Get covers by identifier in specific image format(s), specific image size(s) and with or without generic covers.
 * @summary Search multiple covers
 */
const getCoverCollection = (params, signal) => {
    return (0, fetcher_1.fetcher)({
        url: `/api/v2/covers`,
        method: "get",
        signal,
        params
    });
};
exports.getCoverCollection = getCoverCollection;
const getGetCoverCollectionQueryKey = (params) => [`/api/v2/covers`, ...(params ? [params] : [])];
exports.getGetCoverCollectionQueryKey = getGetCoverCollectionQueryKey;
const useGetCoverCollection = (params, options) => {
    const { query: queryOptions } = options ?? {};
    const queryKey = queryOptions?.queryKey ?? (0, exports.getGetCoverCollectionQueryKey)(params);
    const queryFn = ({ signal }) => (0, exports.getCoverCollection)(params, signal);
    const query = (0, react_query_1.useQuery)(queryKey, queryFn, queryOptions);
    return {
        queryKey,
        ...query
    };
};
exports.useGetCoverCollection = useGetCoverCollection;
